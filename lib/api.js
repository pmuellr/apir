// Generated by CoffeeScript 1.6.3
var API, BuiltInTypes, Logger, coffee, fs, path, pkg, reader, utils, _;

fs = require("fs");

path = require("path");

_ = require("underscore");

coffee = require("coffee-script");

pkg = require("../package.json");

utils = require("./utils");

reader = require("./reader");

Logger = require("./Logger");

BuiltInTypes = {
  Object: Object,
  String: String,
  Number: Number,
  Boolean: Boolean,
  Date: Date,
  Error: Error
};

module.exports = API = (function() {
  function API(options) {
    var logDevice, verbose;
    logDevice = (options != null ? options.logDevice : void 0) || console;
    verbose = (options != null ? options.verbose : void 0) || false;
    this.dumpJS = (options != null ? options.dumpJS : void 0) || false;
    Logger.verbose(verbose);
    this.logger = new Logger(pkg.name, logDevice);
    this.https = [];
    this.funcs = [];
    this.objects = [];
  }

  API.prototype.clone = function() {
    var clone;
    clone = new API;
    clone.https = JSON.parse(JSON.stringify(this.https));
    clone.funcs = JSON.parse(JSON.stringify(this.funcs));
    clone.objects = JSON.parse(JSON.stringify(this.objects));
    return clone;
  };

  API.prototype.log = function(message) {
    this.logger.log(message);
    return this;
  };

  API.prototype.vlog = function(message) {
    this.logger.vlog(message);
    return this;
  };

  API.prototype.newLogger = function(name) {
    return this.logger.newLogger(name);
  };

  API.prototype.readAPI = function(fileName) {
    reader.readAPI(this, fileName);
    return this;
  };

  API.prototype.toJSON = function() {
    return {
      https: this.https,
      funcs: this.funcs,
      objects: this.objects
    };
  };

  return API;

})();
